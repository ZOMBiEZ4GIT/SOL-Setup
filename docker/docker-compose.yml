# SOL Homelab - Main Orchestrator
# This file orchestrates all service groups and provides shared configuration

version: '3.8'

# Shared configuration for all services
x-common-config: &common-config
  restart: unless-stopped
  security_opt: ["no-new-privileges:true"]
  environment:
    - TZ=${TZ}
  logging:
    driver: "loki"
    options:
      loki-url: "http://loki:3100/loki/api/v1/push"
      loki-pipeline-stages: "timestamp"
      loki-external-labels: "environment=homelab"

# Shared resource limits
x-resource-limits: &resource-limits
  deploy:
    resources:
      limits:
        memory: 256M
        cpus: '0.25'
      reservations:
        memory: 64M
        cpus: '0.05'

x-resource-limits-medium: &resource-limits-medium
  deploy:
    resources:
      limits:
        memory: 512M
        cpus: '0.5'
      reservations:
        memory: 128M
        cpus: '0.1'

x-resource-limits-high: &resource-limits-high
  deploy:
    resources:
      limits:
        memory: 1G
        cpus: '0.5'
      reservations:
        memory: 256M
        cpus: '0.1'

x-resource-limits-plex: &resource-limits-plex
  deploy:
    resources:
      limits:
        memory: 2G
        cpus: '1.0'
      reservations:
        memory: 512M
        cpus: '0.25'

# Health check configuration
x-health-check: &health-check
  healthcheck:
    interval: 30s
    timeout: 10s
    retries: 3
    start_period: 60s

# Import service groups
services:
  # Include all service groups
  # These will be loaded from the services/ directory
  
  # Core infrastructure services
  cloudflared:
    extends:
      file: ./services/infrastructure.yml
      service: cloudflared

  adguardhome:
    extends:
      file: ./services/infrastructure.yml
      service: adguardhome

  portainer:
    extends:
      file: ./services/infrastructure.yml
      service: portainer

  homarr:
    extends:
      file: ./services/infrastructure.yml
      service: homarr

  n8n:
    extends:
      file: ./services/infrastructure.yml
      service: n8n

  watchtower:
    extends:
      file: ./services/infrastructure.yml
      service: watchtower

  # Media pipeline services
  plex:
    extends:
      file: ./services/media.yml
      service: plex

  sonarr:
    extends:
      file: ./services/media.yml
      service: sonarr

  radarr:
    extends:
      file: ./services/media.yml
      service: radarr

  prowlarr:
    extends:
      file: ./services/media.yml
      service: prowlarr

  bazarr:
    extends:
      file: ./services/media.yml
      service: bazarr

  overseerr:
    extends:
      file: ./services/media.yml
      service: overseerr

  tautulli:
    extends:
      file: ./services/media.yml
      service: tautulli

  # VPN services
  gluetun:
    extends:
      file: ./services/vpn.yml
      service: gluetun

  qbittorrent:
    extends:
      file: ./services/vpn.yml
      service: qbittorrent

  # Monitoring services
  glances:
    extends:
      file: ./services/monitoring.yml
      service: glances

  uptime-kuma:
    extends:
      file: ./services/monitoring.yml
      service: uptime-kuma

  dozzle:
    extends:
      file: ./services/monitoring.yml
      service: dozzle

  prometheus:
    extends:
      file: ./services/monitoring.yml
      service: prometheus

  node-exporter:
    extends:
      file: ./services/monitoring.yml
      service: node-exporter

  cadvisor:
    extends:
      file: ./services/monitoring.yml
      service: cadvisor

  loki:
    extends:
      file: ./services/monitoring.yml
      service: loki

  promtail:
    extends:
      file: ./services/monitoring.yml
      service: promtail

  grafana:
    extends:
      file: ./services/monitoring.yml
      service: grafana

# Shared volumes
volumes:
  prometheus_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./prometheus/data

# Networks (if needed for future service isolation)
networks:
  default:
    driver: bridge
  monitoring:
    driver: bridge
    internal: true
  media:
    driver: bridge
    internal: true
  vpn:
    driver: bridge
    internal: true
